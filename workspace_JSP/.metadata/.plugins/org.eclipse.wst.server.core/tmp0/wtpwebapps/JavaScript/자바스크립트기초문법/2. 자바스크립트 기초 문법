02 자바스크립트 기초 문법
	
	02-1 자바스크립트 기초 문법
		#자바스크립트 선언문 <script type="text/javascript">..... </script>
			-> 선언문은 자바스크립트 소스를 작성 하기위한 영역을 표시 하는 소스임.
			-> 선언문이 시작된 곳부터 종료한 곳까지 자바스크립트 영역이라고 보면 됩니다.

			예) <script type="text/javascript">   <------선언문의 시작 부분
				자바스크립트 소스 작성 하는 곳 
			    </script> <---선언문의 끝 부분
			
			->자바스크립트 선언문은 <head>  </head>태그영역 내부 또는  <body> </body>영역 내부에 작성할수 있음 
			    
			------------------->  statement_c.html  파일 생성 및 실습
			
		#자바스크립트 언어 문법중..  주석이란?
			 주석 : 소스가 아닌 설명글을 적는 영역을 표시하는 태그
			 -> 한줄로 소스에 대한 설명을 작성 해 놓는 영역을 표시 하고 싶을때		
					//
					
			-> 설명글이 여러 줄인 경우
				/*
				 자바스크립트 언어로 작성한 소스에 대한 설명
				 자바스크립트 언어로 작성한 소스에 대한 설명
				 자바스크립트 언어로 작성한 소스에 대한 설명
				*/
				
			 -> HTML소스의 설명글인 경우
			 	<!-- 
			 		html태그에 대한 소스 설명
			 	-->			    
					    
					    
			#  .html파일 내부에 작성한 자바스크립트코드를 따로 외부파일을 생성하여 소스 분리하기
			
			------------------->  2장폴더 /  js폴더생성 /  example.js생성 후 코드 작성
								  2장폴더 / import_c.html 생성 후 코드 작성
										  import_c.html실행! 하여 테스트 하기 
											
											
		02-2 변수
			#변수란? 
				-변수는 변하는 데이터값을 저장할 수 있는 메모리 공간입니다. (데이터를 담을 수 있는 그릇)
				-변수 메모리 공간에는 데이터가 오직 한 개만 저장 됨.
				-새로운데이터가 변수 메모리 공간에 들어오게 되면 기존에 있던 데이터는 메모리 공간에서 지워지게 됩니다.
				-변수에 저장할 수 있는 데이터의 종류로는 문자형(String), 숫자형(Number), 논리형(Boolean), 비워진(Null) 데이터가 있습니다.
				
			#변수선언
				-변수를 선언(데이터값을 저장할수 있는 메모리 공간 만들기) 할때 에는 var키워드를 변수명 앞에 붙여야 함.
				-변수이름을 지을 때 한글 사용 X
				-변수이름을 지을 때 영문과 숫자 그리고 일부 특수 문자 _, $ 만 포함할 수 있음.
				-변수명은 의미에 맞는 이름으로 만드는 것이 좋음.
				-변수선언 문법
					var 	변수명;  
					var 변수명=값;
					
				------------------->  2장폴더 / var_ex1_c.html 생성후 코드 작성
				
			#변수에 저장할 수 있는 데이터타입(데이터형)
				1.	문자타입(문자형) 데이터
					> 문자형(String)데이터는  문자나 숫자를 큰따옴표 " " 또는 작은따옴표 ' '로 감싸고 있습니다.
				
				1.1 문자타입(문자형) 데이터 를 변수에 저장 하는 기본 문법
					> var 변수명 = "사용할 문자나 숫자";
						소스 예) var	s="javascript";  //변수 s에 문자 데이터 "javascript"를 저장 합니다.
						소스 예) var num="100"; //변수 num에 문자 데이터 "100"을 저장 합니다.
					   소스 예) var tag = "<h1> String </h1>";  //변수 tag에 문자 데이터 "<h1> String </h1>"전체를 저장 합니다.
					
				2. 숫자타입(숫자형) 데이터
					> 숫자형(Number) 데이터는 변수에 저장된 데이터가 숫자만 들어가야 합니다.
					> 만일 "100"과 같이 " "큰따옴표가 감싸고 있다면 숫자가 아닌 문자형 데이터라 볼수 있습니다.
					> 이경우에는 Number()함수에 문자열 "100"을 전달하여 문자형 데이터를 숫자형 데이터로 바꿀수 있습니다.
						소스 예) var	s = 100;
						소스 예) var	t = Number("500"); //문자형 데이터를 숫자형으로 변환하여 500을 반환합니다.
				
				3. 논리타입(논리형) 데이터
					>논리형(Boolean)데이터는 true(참) 또는 false(거짓) 값 2개만 존재.
					> true참 또는 false거짓의 값은 주로 2개의 데이터를 비교할 때 나오는 결과 값임. 		
						소스 예) var s=true;  //변수 s에 데이터 true를 저장 합니다.
						소스 예) var t = 10>=100;  //변수 t에  10>=100의 결과 데이터 false를 저장 합니다.
						소스 예) var  k = Boolean("hello");  //변수 k에 반환된 데이터 true를 저장 합니다.
						
						참고 : Boolean() 내장 메서드에 데이터를 입력하면 논리형 데이터인 true 또는 false를 반환 합니다.
								  Boolean()메서드에 입력하는 데이터 중에 숫자0과 null, undefind를 제외한 모든 데이터는 true를 반환 함.
						소스 예) var m = Boolean(0); // false를 반환하고 변수m에 저장 함
						소스 예) var k = Boolean("홍길동"); //true를 반환 하고 변수k에 저장 함		 
					
					
					------------------->  2장폴더 / boolean_c.html 생성후 코드 작성
					
				4. null 과 undefind 데이터
					- undefind는 변수s에 아무값도 저장되어 있지 않은 경우를 말함.
					- null은 변수에 데이터로 null이 저장되어 있는 경우를 말함.
					 참고 : null은 변수에 저장된 데이터를 비우고자 할때  대신에 null값을 집어 넣음
					 
					 소스 예) var s;     //값이 등록 되어 있지 않은 경우  undefiend
					 소스 예)var t = null;  // 변수 t에 null값을 저장 함.
					 
				5. typeof 키워드 
					- typeof키워드는 지정한 데이터 또는 변수에 저장된 데이터타입(데이터형)을 알고 싶을때 사용함.
					-문법 :  typeof 변수;   
								typeof 데이터; 
				
					------------------->  2장폴더 / typeof_c.html 생성후 소스 작성 (문제 풀기)
					
				
		02-2 연산자
	
				#산술 연산자
					+ - * / %					
					------------------->  2장폴더 /part2-5-1.html 생성후 소스 작성 (문제 풀기)
				
				#문자결합 연산자
					+
					여러개의 문자를 하나의 문자로 결합할때 사용함.
					문법 :  문자형데이터 + 문자형데이터 = 하나의 문자형데이터
					문법 :  문자형데이터 + 숫자형데이터 = 하나의 문자형 데이터
		 
		 	   		------------------->  2장폴더 /string_plus_c.html 생성후 소스 작성 
				
				#대입 연산자
					=
					대입연산자 =는 연산된 데이터를 최종적으로 변수에 저장할 때 사용함.
					
				#복합 대입 연산자
					+=                   
					*=
					-=
					/=
					%=
					산술 연산자와 대입연산자가 복합적으로 적용된것을 말함
					
					------------------->  2장폴더 /dboperator_c.html 생성후 소스 작성 
					
					------------------->  2장폴더 /texttable_c.html 생성후 소스 작성
					
								
				#증감 연산자
				  - 		++ (숫자데이터를 1씩 증가 시키는 증가연산자)
				  - 		-- (숫자데이터를 1씩 감소 시키는 감소연산자)
				  -			문법
				  					변수--;  또는 --변수;    //1 감소 시킴
				  					변수++;  또는 ++변수;  //1 증가 시킴
				  -			소스예) var A = ++B;  //변수 B의 데이터를 1증가 시킨후 변수 A에 저장 합니다.
				  			소스예) var A = B++; //변수 A에 변수B의 데이터를 저장한 후 변수B의 데이터를 1증가 시킵니다.
				  			
				 ------------------->  2장폴더 / growth_c.html 생성후 소스 작성			  			
				
				
				#비교 연산자
					- 두데이터를 '크다, 작다, 같다'와 같이 비교할 때 사용하는 연산자.
					- 연산된 결과의 값은 true(참) 또는 false(거짓)으로 논리형 데이터를 반환 합니다.
					- 종류							설명														비고
						A > B				A가 B보다 크다.
						A < B				A가 B보다 작다.
						A >= B				A가 B보다 크거나 같다.
						A <= B				A가 B보다 작거나 같다.
						A == B				A와 B는 같다									숫자를 비교할 경우 데이터형(데이터타입)은 숫자형이든 문자형이든 상관 하지 
																										않고 표기된 숫자만 일치하면 true을 반환 합니다.
																										가령, 숫자형10과 문자형 "10"은 같은 것으로 인식되어 true를 반환 합니다.
					   
					   A != B				A와 B는 다르다.							   숫자형 10과 문자형 "10"은 같은 것으로 인식되어  A!=B에 대해 false를 반환함.
					   
					   A ===B				A와 B는 같다.									숫자를 비교 할 경우 반드시 표기된 숫자와 데이터형도 일치해야만 true를 반환함.
					   																					10과 "10"을 비교 했을 경우 표기된 숫자는 같지만 하나는 숫자형 10이고
					   																					하나는 문자형 "10"이므로 fasle를 반환함.
					   
					   A !==B				A와 B는 다르다.							   숫자를 비교 할 경우 반드시 표기된 숫자와 데이터형도 일치해야만 true를 반환함.
																										10과 "10"을 비교 했을 경우 표기된 숫자는 같지만 하나는 숫자형 10이고
					   																					하나는 문자형 "10"이므로 true를 반환함.
					
					 ------------------->  2장폴더 / part2-5-5.html 생성후 소스 작성
					
				
				#논리 연산자
					종류							설명														
					||								or연산자라 부르며, 피연산자 중 값이 하나라도 true가 존재 하면 true결괏갑을 반환함.
								
					&&							and 연산자라 부르며, 피연산자 중 값이 하나라도 false가 존재 하면 fasle결괏값을 반환함.
					
					!								not 연산자라 부르며, 단항 연산자 입니다.
													피연산자의 값이 true이면 반대로 fasle결괏값을 반환함.
				
				
				#연산자 우선순위
					1위  ( )
					2위 단항 연산자 --, ++ , !
					3위 산술 연산자 *, /, %, +, -
					4위 비교 연산자  >, >=, <, <= , ==,  ===,  !==
					5위 논리 연산자  &&, ||
					6위 대입(복합 대입)  연산자  = ,  +=,   -=,   *=,   /=,  %=  
					
					
				#삼항 조건 연산자
					- 삼항 조건 연산자는 조건식(true 또는 false의 결괏값을 반환)의 데이터 결과에 따라 실행 결과가 달라짐
					- 삼항 조건 연산자는 연산하기 위해서는  피연산자가 3개 필요한 삼항 연산자 입니다.				
				    -		문법
					 조건식 ? 실행문1  : 실행문2;
					 
					 
					 
					
				
				
				 	
																			
			
			
								    